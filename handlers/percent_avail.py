from aiogram import Router, types, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from datetime import timedelta
from db.database import get_db_pool

router = Router()

# –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã: –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è ‚Üí timedelta
HUMAN_INTERVALS = {
    "1 hour": timedelta(hours=1),
    "2 hours": timedelta(hours=2),
    "4 hours": timedelta(hours=4),
    "8 hours": timedelta(hours=8),
    "12 hours": timedelta(hours=12),
    "1 day": timedelta(days=1),
    "2 days": timedelta(days=2),
    "3 days": timedelta(days=3),
    "365 days": timedelta(days=365),  # –í—Å—è –∏—Å—Ç–æ—Ä–∏—è
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def get_interval_keyboard():
    buttons = [
        ("1—á", "1 hour"), ("2—á", "2 hours"), ("4—á", "4 hours"), ("8—á", "8 hours"),
        ("12—á", "12 hours"), ("24—á", "1 day"), ("48—á", "2 days"), ("72—á", "3 days"),
    ]

    rows = [
        [
            InlineKeyboardButton(text=label, callback_data=f"avail:{interval}")
            for label, interval in buttons[i:i + 4]
        ]
        for i in range(0, len(buttons), 4)
    ]

    rows.append([
        InlineKeyboardButton(text="–í—Å—è –∏—Å—Ç–æ—Ä–∏—è", callback_data="avail:365 days")
    ])

    return InlineKeyboardMarkup(inline_keyboard=rows)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /percent_avail
@router.message(F.text == "/percent_avail")
async def cmd_percent_avail(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:", reply_markup=get_interval_keyboard())


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
@router.callback_query(F.data.startswith("avail:"))
async def handle_avail_callback(callback: types.CallbackQuery):
    interval_str = callback.data.split("avail:")[1]
    interval_obj = HUMAN_INTERVALS.get(interval_str)

    if interval_obj is None:
        await callback.message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª.")
        return

    pool = get_db_pool()
    async with pool.acquire() as conn:
        rows = await conn.fetch(
            "SELECT name, availability_percent FROM get_server_availability($1::interval)",
            interval_obj
        )

    if not rows:
        text = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥."
    else:
        text = "\n".join(
            f"üîπ <b>{r['name']}</b>: {r['availability_percent']}%" for r in rows
        )

    await callback.message.edit_text(
        f"<b>–ü—Ä–æ—Ü–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤</b> –∑–∞: <code>{interval_str}</code>\n\n{text}",
        parse_mode="HTML"
    )
    await callback.answer()
